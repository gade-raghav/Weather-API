# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven and Package
      run: cd weather-API && ./mvnw clean package
    - name: Get release version
      id: get_version
      run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_SHA:0:6})
    - name: Publish to Dockerhub
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        # The name of the image you would like to push
        name: raghavgade/weather-api
        # The login username for the registry
        username: ${{ secrets.dockerhub_username }}
        # The login password for the registry
        password:  ${{ secrets.dockerhub_password }}
        # Use dockerfile when you would like to explicitly build a Dockerfile
        dockerfile: Dockerfile
        # Use buildargs when you want to pass a list of environment variables as build-args
        buildargs: JAR_FILE=weather-API/target/rest-service-0.0.1-SNAPSHOT.jar
        tags: "${{ env.RELEASE_VERSION }}"
